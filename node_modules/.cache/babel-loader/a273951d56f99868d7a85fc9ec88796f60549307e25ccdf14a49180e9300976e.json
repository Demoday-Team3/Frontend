{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\group\\\\src\\\\screens\\\\PrivateAccess\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateAccess = () => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`/api/groups/${id}/verify-password`, {\n        password\n      });\n      if (response.data.success) {\n        navigate(`/group-details/${id}`);\n      } else {\n        setError(\"비밀번호가 일치하지 않습니다.\");\n      }\n    } catch (error) {\n      setError(\"비밀번호 검증에 실패했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"private-access\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBE44\\uACF5\\uAC1C \\uADF8\\uB8F9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uBE44\\uACF5\\uAC1C \\uADF8\\uB8F9\\uC5D0 \\uC811\\uADFC\\uD558\\uAE30 \\uC704\\uD574\\uC120 \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(PrivateAccess, \"5ji2wy14uTYsv4+jcNoNGmuxtic=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = PrivateAccess;\nexport default PrivateAccess;\nvar _c;\n$RefreshReg$(_c, \"PrivateAccess\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","axios","jsxDEV","_jsxDEV","PrivateAccess","_s","password","setPassword","error","setError","navigate","id","handleSubmit","e","preventDefault","response","post","data","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/group/src/screens/PrivateAccess/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\n\r\nconst PrivateAccess = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(`/api/groups/${id}/verify-password`, {\r\n        password,\r\n      });\r\n      if (response.data.success) {\r\n        navigate(`/group-details/${id}`);\r\n      } else {\r\n        setError(\"비밀번호가 일치하지 않습니다.\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"비밀번호 검증에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"private-access\">\r\n      <h2>비공개 그룹</h2>\r\n      <p>비공개 그룹에 접근하기 위해선 비밀번호가 필요합니다.</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"password\">비밀번호를 입력해주세요</label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 입력해 주세요\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">제출하기</button>\r\n      </form>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateAccess;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY;EAAG,CAAC,GAAGX,SAAS,CAAC,CAAC;EAE1B,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,eAAeL,EAAE,kBAAkB,EAAE;QACrEL;MACF,CAAC,CAAC;MACF,IAAIS,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACzBR,QAAQ,CAAC,kBAAkBC,EAAE,EAAE,CAAC;MAClC,CAAC,MAAM;QACLF,QAAQ,CAAC,kBAAkB,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAAC,kBAAkB,CAAC;IAC9B;EACF,CAAC;EAED,oBACEN,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAAiB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfrB,OAAA;MAAAiB,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpCrB,OAAA;MAAMsB,QAAQ,EAAEb,YAAa;MAAAQ,QAAA,gBAC3BjB,OAAA;QAAOuB,OAAO,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9CrB,OAAA;QACEwB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,sEAAe;QAC3BC,KAAK,EAAEvB,QAAS;QAChBwB,QAAQ,EAAGjB,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFrB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EACNhB,KAAK,iBAAIL,OAAA;MAAGgB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACnB,EAAA,CAvCID,aAAa;EAAA,QAGAL,WAAW,EACbC,SAAS;AAAA;AAAAgC,EAAA,GAJpB5B,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\group\\\\src\\\\screens\\\\PrivateGroup\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// 모달 컴포넌트 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  title,\n  isOpen,\n  onClose,\n  onSubmit,\n  inputPassword,\n  setInputPassword\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [title, \" \\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: inputPassword,\n          onChange: e => setInputPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onClose,\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Modal;\nconst PrivateGroupPage = ({\n  privateGroups\n}) => {\n  _s();\n  const [selectedGroup, setSelectedGroup] = useState(null); // 선택된 그룹\n  const [inputPassword, setInputPassword] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태\n\n  // 그룹을 클릭했을 때 실행되는 함수\n  const handleGroupClick = group => {\n    setSelectedGroup(group);\n    setIsModalOpen(true); // 모달 열기\n  };\n\n  // 비밀번호 제출 시 실행되는 함수\n  const handlePasswordSubmit = e => {\n    e.preventDefault();\n    if (selectedGroup && inputPassword === selectedGroup.password) {\n      setIsAuthenticated(true);\n      setIsModalOpen(false); // 모달 닫기\n    } else {\n      alert(\"비밀번호가 틀렸습니다.\");\n    }\n  };\n\n  // 모달 닫기 함수\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setInputPassword(\"\"); // 비밀번호 초기화\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBE44\\uACF5\\uAC1C \\uADF8\\uB8F9 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-list\",\n      children: privateGroups.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-item\",\n        onClick: () => handleGroupClick(group) // 그룹 클릭 시 선택\n        ,\n        style: {\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: group.image,\n          alt: group.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: group.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: group.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.title,\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      onSubmit: handlePasswordSubmit,\n      inputPassword: inputPassword,\n      setInputPassword: setInputPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), selectedGroup && isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedGroup.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedGroup.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedGroup.image,\n        alt: selectedGroup.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(PrivateGroupPage, \"7pmztPX2AkKJ6AMcyKu5wcfrFJA=\");\n_c2 = PrivateGroupPage;\nexport default PrivateGroupPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"PrivateGroupPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Modal","title","isOpen","onClose","onSubmit","inputPassword","setInputPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","PrivateGroupPage","privateGroups","_s","selectedGroup","setSelectedGroup","isAuthenticated","setIsAuthenticated","isModalOpen","setIsModalOpen","handleGroupClick","group","handlePasswordSubmit","preventDefault","password","alert","closeModal","map","index","style","cursor","src","image","alt","description","_c2","$RefreshReg$"],"sources":["C:/Users/User/Desktop/group/src/screens/PrivateGroup/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// 모달 컴포넌트 정의\r\nconst Modal = ({\r\n  title,\r\n  isOpen,\r\n  onClose,\r\n  onSubmit,\r\n  inputPassword,\r\n  setInputPassword,\r\n}) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2>{title} 비밀번호 입력</h2>\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"비밀번호를 입력하세요\"\r\n            value={inputPassword}\r\n            onChange={(e) => setInputPassword(e.target.value)}\r\n          />\r\n          <button type=\"submit\">제출하기</button>\r\n          <button type=\"button\" onClick={onClose}>\r\n            취소\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PrivateGroupPage = ({ privateGroups }) => {\r\n  const [selectedGroup, setSelectedGroup] = useState(null); // 선택된 그룹\r\n  const [inputPassword, setInputPassword] = useState(\"\");\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태\r\n\r\n  // 그룹을 클릭했을 때 실행되는 함수\r\n  const handleGroupClick = (group) => {\r\n    setSelectedGroup(group);\r\n    setIsModalOpen(true); // 모달 열기\r\n  };\r\n\r\n  // 비밀번호 제출 시 실행되는 함수\r\n  const handlePasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (selectedGroup && inputPassword === selectedGroup.password) {\r\n      setIsAuthenticated(true);\r\n      setIsModalOpen(false); // 모달 닫기\r\n    } else {\r\n      alert(\"비밀번호가 틀렸습니다.\");\r\n    }\r\n  };\r\n\r\n  // 모달 닫기 함수\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setInputPassword(\"\"); // 비밀번호 초기화\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>비공개 그룹 목록</h1>\r\n      <div className=\"group-list\">\r\n        {privateGroups.map((group, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"group-item\"\r\n            onClick={() => handleGroupClick(group)} // 그룹 클릭 시 선택\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <img src={group.image} alt={group.title} />\r\n            <h3>{group.title}</h3>\r\n            <p>{group.description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* 모달 컴포넌트 사용 */}\r\n      <Modal\r\n        title={selectedGroup?.title}\r\n        isOpen={isModalOpen}\r\n        onClose={closeModal}\r\n        onSubmit={handlePasswordSubmit}\r\n        inputPassword={inputPassword}\r\n        setInputPassword={setInputPassword}\r\n      />\r\n\r\n      {selectedGroup && isAuthenticated && (\r\n        <div className=\"group-details\">\r\n          <h2>{selectedGroup.title}</h2>\r\n          <p>{selectedGroup.description}</p>\r\n          <img src={selectedGroup.image} alt={selectedGroup.title} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateGroupPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\group\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Group from \"./screens/Group\";\nimport CreateGroupPage from \"./screens/CreateGroup\";\nimport PrivateGroupAccessPage from \"./screens/PrivateAccess/index\";\nimport GroupDetail from \"./screens/GroupDetail\";\nimport Layout from \"./Layout/Layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n\n  // 앱이 처음 로드될 때 서버에서 그룹 데이터를 불러오는 함수\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const response = await fetch(\"/api/groups\", {\n          method: \"GET\"\n        });\n        if (!response.ok) {\n          throw new Error(\"그룹 데이터를 불러오는데 실패했습니다.\");\n        }\n        const data = await response.json();\n        setGroups(data.groups); // 서버에서 받은 그룹 데이터를 상태에 저장\n      } catch (error) {\n        console.error(\"Error fetching groups:\", error);\n      }\n    };\n    fetchGroups();\n  }, []);\n\n  // 새로운 그룹을 서버에 추가하고 상태를 업데이트하는 함수\n  const addGroup = async newGroup => {\n    try {\n      const response = await fetch(\"/api/groups\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newGroup)\n      });\n      if (!response.ok) {\n        throw new Error(\"그룹 생성에 실패했습니다.\");\n      }\n      const savedGroup = await response.json();\n      setGroups([...groups, savedGroup]); // 새로운 그룹을 상태에 추가\n    } catch (error) {\n      console.error(\"Error adding group:\", error);\n    }\n  };\n  const publicGroups = groups.filter(group => !group.isPrivate);\n  const privateGroups = groups.filter(group => group.isPrivate);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Group, {\n            groups: groups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/create\",\n          element: /*#__PURE__*/_jsxDEV(CreateGroupPage, {\n            addGroup: addGroup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/public-group-list\",\n          element: /*#__PURE__*/_jsxDEV(Group, {\n            groups: publicGroups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/private-access/:id\",\n          element: /*#__PURE__*/_jsxDEV(PrivateGroupAccessPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/private-group-list\",\n          element: /*#__PURE__*/_jsxDEV(Group, {\n            groups: privateGroups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/group-details/:id\",\n          element: /*#__PURE__*/_jsxDEV(GroupDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UbUkkKKaTwVY7PWotTfxor2xXvY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Group","CreateGroupPage","PrivateGroupAccessPage","GroupDetail","Layout","jsxDEV","_jsxDEV","App","_s","groups","setGroups","fetchGroups","response","fetch","method","ok","Error","data","json","error","console","addGroup","newGroup","headers","body","JSON","stringify","savedGroup","publicGroups","filter","group","isPrivate","privateGroups","children","element","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/group/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Group from \"./screens/Group\";\nimport CreateGroupPage from \"./screens/CreateGroup\";\nimport PrivateGroupAccessPage from \"./screens/PrivateAccess/index\";\nimport GroupDetail from \"./screens/GroupDetail\";\nimport Layout from \"./Layout/Layout\";\n\nconst App = () => {\n  const [groups, setGroups] = useState([]);\n\n  // 앱이 처음 로드될 때 서버에서 그룹 데이터를 불러오는 함수\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const response = await fetch(\"/api/groups\", {\n          method: \"GET\",\n        });\n        if (!response.ok) {\n          throw new Error(\"그룹 데이터를 불러오는데 실패했습니다.\");\n        }\n        const data = await response.json();\n        setGroups(data.groups); // 서버에서 받은 그룹 데이터를 상태에 저장\n      } catch (error) {\n        console.error(\"Error fetching groups:\", error);\n      }\n    };\n\n    fetchGroups();\n  }, []);\n\n  // 새로운 그룹을 서버에 추가하고 상태를 업데이트하는 함수\n  const addGroup = async (newGroup) => {\n    try {\n      const response = await fetch(\"/api/groups\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newGroup),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"그룹 생성에 실패했습니다.\");\n      }\n\n      const savedGroup = await response.json();\n      setGroups([...groups, savedGroup]); // 새로운 그룹을 상태에 추가\n    } catch (error) {\n      console.error(\"Error adding group:\", error);\n    }\n  };\n\n  const publicGroups = groups.filter((group) => !group.isPrivate);\n  const privateGroups = groups.filter((group) => group.isPrivate);\n\n  return (\n    <Router>\n      <Routes>\n        <Route element={<Layout />}>\n          {/* 공통 레이아웃 적용 */}\n          <Route path=\"/\" element={<Group groups={groups} />} />\n          <Route\n            path=\"/create\"\n            element={<CreateGroupPage addGroup={addGroup} />}\n          />\n          <Route\n            path=\"/public-group-list\"\n            element={<Group groups={publicGroups} />}\n          />\n          <Route\n            path=\"/private-access/:id\"\n            element={<PrivateGroupAccessPage />}\n          />\n          <Route\n            path=\"/private-group-list\"\n            element={<Group groups={privateGroups} />}\n          />\n          <Route path=\"/group-details/:id\" element={<GroupDetail />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
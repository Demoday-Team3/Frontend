{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\group\\\\src\\\\screens\\\\PrivateAccess\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"./style.css\";\n\n//그룹 조회 권한 확인 api 호출\n\n// PrivateAccess 컴포넌트: 비공개 그룹에 접근할 때 비밀번호를 확인하는 역할\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateAccess = ({\n  privateGroups\n}) => {\n  _s();\n  // 비밀번호와 에러 메시지를 관리하기 위한 상태 선언\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // 페이지 이동을 위한 useNavigate 훅과 URL 매개변수를 가져오기 위한 useParams 훅 사용\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n\n  // 주어진 id에 해당하는 그룹을 찾음\n  const group = privateGroups.find(group => group.id === id);\n\n  // 그룹이 존재하지 않을 경우, 에러 메시지를 표시\n  if (!group) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uADF8\\uB8F9\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 폼이 제출될 때 호출되는 함수\n  const handleSubmit = e => {\n    e.preventDefault(); // 폼 제출 시 페이지 새로고침 방지\n    // 입력한 비밀번호가 그룹의 비밀번호와 일치하는지 확인\n    if (password === group.password) {\n      navigate(`/group-details/${group.id}`); // 비밀번호가 일치하면 그룹 상세 페이지로 이동\n    } else {\n      setError(\"비밀번호가 일치하지 않습니다.\"); // 비밀번호가 틀리면 에러 메시지 설정\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"private-access\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBE44\\uACF5\\uAC1C \\uADF8\\uB8F9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uBE44\\uACF5\\uAC1C \\uADF8\\uB8F9\\uC5D0 \\uC811\\uADFC\\uD558\\uAE30 \\uC704\\uD574\\uC120 \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n        value: password,\n        onChange: e => setPassword(e.target.value) // 비밀번호 입력 필드가 변경될 때 상태 업데이트\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PrivateAccess, \"5ji2wy14uTYsv4+jcNoNGmuxtic=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = PrivateAccess;\nexport default PrivateAccess;\nvar _c;\n$RefreshReg$(_c, \"PrivateAccess\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","jsxDEV","_jsxDEV","PrivateAccess","privateGroups","_s","password","setPassword","error","setError","navigate","id","group","find","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","e","preventDefault","className","onSubmit","htmlFor","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/group/src/screens/PrivateAccess/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\n//그룹 조회 권한 확인 api 호출\r\n\r\n// PrivateAccess 컴포넌트: 비공개 그룹에 접근할 때 비밀번호를 확인하는 역할\r\nconst PrivateAccess = ({ privateGroups }) => {\r\n  // 비밀번호와 에러 메시지를 관리하기 위한 상태 선언\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // 페이지 이동을 위한 useNavigate 훅과 URL 매개변수를 가져오기 위한 useParams 훅 사용\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  // 주어진 id에 해당하는 그룹을 찾음\r\n  const group = privateGroups.find((group) => group.id === id);\r\n\r\n  // 그룹이 존재하지 않을 경우, 에러 메시지를 표시\r\n  if (!group) {\r\n    return <p>그룹을 찾을 수 없습니다.</p>;\r\n  }\r\n\r\n  // 폼이 제출될 때 호출되는 함수\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // 폼 제출 시 페이지 새로고침 방지\r\n    // 입력한 비밀번호가 그룹의 비밀번호와 일치하는지 확인\r\n    if (password === group.password) {\r\n      navigate(`/group-details/${group.id}`); // 비밀번호가 일치하면 그룹 상세 페이지로 이동\r\n    } else {\r\n      setError(\"비밀번호가 일치하지 않습니다.\"); // 비밀번호가 틀리면 에러 메시지 설정\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"private-access\">\r\n      <h2>비공개 그룹</h2>\r\n      <p>비공개 그룹에 접근하기 위해선 비밀번호가 필요합니다.</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"password\">비밀번호를 입력해주세요</label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 입력해 주세요\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)} // 비밀번호 입력 필드가 변경될 때 상태 업데이트\r\n        />\r\n        <button type=\"submit\">제출하기</button>\r\n      </form>\r\n      {error && <p className=\"error-message\">{error}</p>}{\" \"}\r\n      {/* 에러 메시지가 있을 경우 화면에 표시 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateAccess;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
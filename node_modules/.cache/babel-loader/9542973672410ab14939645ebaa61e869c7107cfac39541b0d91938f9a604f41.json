{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\group\\\\src\\\\screens\\\\Group\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Group = () => {\n  _s();\n  const [groups, setGroups] = useState([]); // API에서 가져온 그룹 데이터를 저장\n  const [filter, setFilter] = useState(\"public\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n  const [loading, setLoading] = useState(true); // 데이터를 로딩 중인지 여부를 관리\n  const [error, setError] = useState(null); // 에러 상태 관리\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const response = await fetch(\"/api/groups?page=1&pageSize=10&sortBy=latest\");\n        if (!response.ok) {\n          throw new Error(\"그룹 목록을 불러오는 데 실패했습니다.\");\n        }\n        const data = await response.json();\n        setGroups(data); // 가져온 그룹 데이터를 상태에 저장\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchGroups();\n  }, []); // 빈 배열을 두 번째 인자로 전달해 컴포넌트가 마운트될 때만 실행\n\n  const handleFilterClick = filterType => {\n    setFilter(filterType);\n    navigate(filterType === \"public\" ? \"/public-group-list\" : \"/private-group-list\");\n  };\n  const handleSearchChange = e => setSearchTerm(e.target.value);\n  const handleSortChange = e => setSortOrder(e.target.value);\n  const handleGroupClick = group => {\n    navigate(group.isPrivate ? `/private-access/${group.id}` : `/group-details/${group.id}`);\n  };\n  const checkBadgeConditions = group => {\n    var _group$memories;\n    let earnedBadges = [];\n    if (group.memoryStreak >= 7) earnedBadges.push(1); // 7일 연속 추억 등록\n    if (group.memoryCount >= 20) earnedBadges.push(2); // 추억 20개 이상\n    const oneYear = 365 * 24 * 60 * 60 * 1000;\n    if (new Date() - new Date(group.createdAt) >= oneYear) earnedBadges.push(3); // 그룹 생성 1년 달성\n    if (group.likeCount >= 10000) earnedBadges.push(4); // 공감 1만 개 이상\n    if ((_group$memories = group.memories) !== null && _group$memories !== void 0 && _group$memories.some(memory => memory.likeCount >= 10000)) earnedBadges.push(5); // 추억 공감 1만 개 이상\n\n    return earnedBadges;\n  };\n  const filteredGroups = groups.map(group => ({\n    ...group,\n    badgeIds: checkBadgeConditions(group)\n  })).filter(group => filter === \"public\" ? group.isPublic : !group.isPublic).filter(group => {\n    var _group$name;\n    return (_group$name = group.name) === null || _group$name === void 0 ? void 0 : _group$name.toLowerCase().includes(searchTerm.toLowerCase());\n  }).sort((a, b) => {\n    if (sortOrder === \"latest\") return new Date(b.createdAt) - new Date(a.createdAt);\n    if (sortOrder === \"mostLiked\") return b.likeCount - a.likeCount;\n    if (sortOrder === \"mostPosts\") return b.postCount - a.postCount;\n    if (sortOrder === \"mostBadges\") return b.badgeIds.length - a.badgeIds.length;\n    return 0;\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this); // 데이터를 로딩 중일 때 표시\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this); // 에러가 발생했을 때 표시\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-list-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/create\"),\n          className: \"create-button\",\n          children: \"\\uADF8\\uB8F9 \\uB9CC\\uB4E4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-and-sort\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === \"public\" ? \"active-filter\" : \"\",\n          onClick: () => handleFilterClick(\"public\"),\n          children: \"\\uACF5\\uAC1C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === \"private\" ? \"active-filter\" : \"\",\n          onClick: () => handleFilterClick(\"private\"),\n          children: \"\\uBE44\\uACF5\\uAC1C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uADF8\\uB8F9\\uBA85\\uC744 \\uAC80\\uC0C9\\uD574 \\uC8FC\\uC138\\uC694\",\n        value: searchTerm,\n        onChange: handleSearchChange,\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortOrder,\n        onChange: handleSortChange,\n        className: \"sort-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"latest\",\n          children: \"\\uCD5C\\uC2E0\\uC21C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mostLiked\",\n          children: \"\\uACF5\\uAC10\\uC21C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mostPosts\",\n          children: \"\\uAC8C\\uC2DC\\uAE00 \\uB9CE\\uC740\\uC21C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mostBadges\",\n          children: \"\\uD68D\\uB4DD \\uBC30\\uC9C0\\uC21C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-list\",\n      children: filteredGroups.length > 0 ? filteredGroups.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-item\",\n        onClick: () => handleGroupClick(group),\n        children: [group.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: group.imageUrl || \"default-image-path.png\",\n          alt: group.name || \"그룹 이미지\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-details\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: group.isPublic ? \"공개\" : \"비공개\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), group.introduction && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: group.introduction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD68D\\uB4DD \\uBC30\\uC9C0: \", (group.badgeIds || []).length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uAC8C\\uC2DC\\uAE00 \\uC218: \", group.postCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uACF5\\uAC10\\uC218: \", group.likeCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uADF8\\uB8F9\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Group, \"TjAHbfFykUc7UPMcTyJ/hA0zxAc=\", false, function () {\n  return [useNavigate];\n});\n_c = Group;\nexport default Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Group","_s","groups","setGroups","filter","setFilter","searchTerm","setSearchTerm","sortOrder","setSortOrder","loading","setLoading","error","setError","navigate","fetchGroups","response","fetch","ok","Error","data","json","err","message","handleFilterClick","filterType","handleSearchChange","e","target","value","handleSortChange","handleGroupClick","group","isPrivate","id","checkBadgeConditions","_group$memories","earnedBadges","memoryStreak","push","memoryCount","oneYear","Date","createdAt","likeCount","memories","some","memory","filteredGroups","map","badgeIds","isPublic","_group$name","name","toLowerCase","includes","sort","a","b","postCount","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","type","placeholder","onChange","index","imageUrl","src","alt","introduction","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/group/src/screens/Group/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nconst Group = () => {\r\n  const [groups, setGroups] = useState([]); // API에서 가져온 그룹 데이터를 저장\r\n  const [filter, setFilter] = useState(\"public\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortOrder, setSortOrder] = useState(\"latest\");\r\n  const [loading, setLoading] = useState(true); // 데이터를 로딩 중인지 여부를 관리\r\n  const [error, setError] = useState(null); // 에러 상태 관리\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchGroups = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"/api/groups?page=1&pageSize=10&sortBy=latest\"\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"그룹 목록을 불러오는 데 실패했습니다.\");\r\n        }\r\n        const data = await response.json();\r\n        setGroups(data); // 가져온 그룹 데이터를 상태에 저장\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchGroups();\r\n  }, []); // 빈 배열을 두 번째 인자로 전달해 컴포넌트가 마운트될 때만 실행\r\n\r\n  const handleFilterClick = (filterType) => {\r\n    setFilter(filterType);\r\n    navigate(\r\n      filterType === \"public\" ? \"/public-group-list\" : \"/private-group-list\"\r\n    );\r\n  };\r\n\r\n  const handleSearchChange = (e) => setSearchTerm(e.target.value);\r\n\r\n  const handleSortChange = (e) => setSortOrder(e.target.value);\r\n\r\n  const handleGroupClick = (group) => {\r\n    navigate(\r\n      group.isPrivate\r\n        ? `/private-access/${group.id}`\r\n        : `/group-details/${group.id}`\r\n    );\r\n  };\r\n\r\n  const checkBadgeConditions = (group) => {\r\n    let earnedBadges = [];\r\n\r\n    if (group.memoryStreak >= 7) earnedBadges.push(1); // 7일 연속 추억 등록\r\n    if (group.memoryCount >= 20) earnedBadges.push(2); // 추억 20개 이상\r\n    const oneYear = 365 * 24 * 60 * 60 * 1000;\r\n    if (new Date() - new Date(group.createdAt) >= oneYear) earnedBadges.push(3); // 그룹 생성 1년 달성\r\n    if (group.likeCount >= 10000) earnedBadges.push(4); // 공감 1만 개 이상\r\n    if (group.memories?.some((memory) => memory.likeCount >= 10000))\r\n      earnedBadges.push(5); // 추억 공감 1만 개 이상\r\n\r\n    return earnedBadges;\r\n  };\r\n\r\n  const filteredGroups = groups\r\n    .map((group) => ({\r\n      ...group,\r\n      badgeIds: checkBadgeConditions(group),\r\n    }))\r\n    .filter((group) => (filter === \"public\" ? group.isPublic : !group.isPublic))\r\n    .filter((group) =>\r\n      group.name?.toLowerCase().includes(searchTerm.toLowerCase())\r\n    )\r\n    .sort((a, b) => {\r\n      if (sortOrder === \"latest\")\r\n        return new Date(b.createdAt) - new Date(a.createdAt);\r\n      if (sortOrder === \"mostLiked\") return b.likeCount - a.likeCount;\r\n      if (sortOrder === \"mostPosts\") return b.postCount - a.postCount;\r\n      if (sortOrder === \"mostBadges\")\r\n        return b.badgeIds.length - a.badgeIds.length;\r\n      return 0;\r\n    });\r\n\r\n  if (loading) {\r\n    return <p>로딩 중...</p>; // 데이터를 로딩 중일 때 표시\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>; // 에러가 발생했을 때 표시\r\n  }\r\n\r\n  return (\r\n    <div className=\"group-list-page\">\r\n      <div className=\"header-container\">\r\n        <div className=\"logo-container\"></div>\r\n        <div className=\"create-button-container\">\r\n          <button onClick={() => navigate(\"/create\")} className=\"create-button\">\r\n            그룹 만들기\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"search-and-sort\">\r\n        <div className=\"filter-buttons\">\r\n          <button\r\n            className={filter === \"public\" ? \"active-filter\" : \"\"}\r\n            onClick={() => handleFilterClick(\"public\")}\r\n          >\r\n            공개\r\n          </button>\r\n          <button\r\n            className={filter === \"private\" ? \"active-filter\" : \"\"}\r\n            onClick={() => handleFilterClick(\"private\")}\r\n          >\r\n            비공개\r\n          </button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"그룹명을 검색해 주세요\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n          className=\"search-input\"\r\n        />\r\n        <select\r\n          value={sortOrder}\r\n          onChange={handleSortChange}\r\n          className=\"sort-select\"\r\n        >\r\n          <option value=\"latest\">최신순</option>\r\n          <option value=\"mostLiked\">공감순</option>\r\n          <option value=\"mostPosts\">게시글 많은순</option>\r\n          <option value=\"mostBadges\">획득 배지순</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"group-list\">\r\n        {filteredGroups.length > 0 ? (\r\n          filteredGroups.map((group, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"group-item\"\r\n              onClick={() => handleGroupClick(group)}\r\n            >\r\n              {group.imageUrl && (\r\n                <img\r\n                  src={group.imageUrl || \"default-image-path.png\"}\r\n                  alt={group.name || \"그룹 이미지\"}\r\n                />\r\n              )}\r\n              <div className=\"group-details\">\r\n                <span>{group.isPublic ? \"공개\" : \"비공개\"}</span>\r\n              </div>\r\n              <h3>{group.name}</h3>\r\n              {group.introduction && <p>{group.introduction}</p>}\r\n              <div className=\"group-stats\">\r\n                <div>\r\n                  <span>획득 배지: {(group.badgeIds || []).length}</span>\r\n                </div>\r\n                <div>\r\n                  <span>게시글 수: {group.postCount}</span>\r\n                </div>\r\n                <div>\r\n                  <span>공감수: {group.likeCount}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>그룹이 없습니다.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,QAAQ,CAAC;EAC9C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,QAAQ,CAAC;EACpD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAMmB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMmB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8CACF,CAAC;QACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClClB,SAAS,CAACiB,IAAI,CAAC,CAAC,CAAC;QACjBT,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOW,GAAG,EAAE;QACZT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;QACrBZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMS,iBAAiB,GAAIC,UAAU,IAAK;IACxCpB,SAAS,CAACoB,UAAU,CAAC;IACrBX,QAAQ,CACNW,UAAU,KAAK,QAAQ,GAAG,oBAAoB,GAAG,qBACnD,CAAC;EACH,CAAC;EAED,MAAMC,kBAAkB,GAAIC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE/D,MAAMC,gBAAgB,GAAIH,CAAC,IAAKlB,YAAY,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE5D,MAAME,gBAAgB,GAAIC,KAAK,IAAK;IAClClB,QAAQ,CACNkB,KAAK,CAACC,SAAS,GACX,mBAAmBD,KAAK,CAACE,EAAE,EAAE,GAC7B,kBAAkBF,KAAK,CAACE,EAAE,EAChC,CAAC;EACH,CAAC;EAED,MAAMC,oBAAoB,GAAIH,KAAK,IAAK;IAAA,IAAAI,eAAA;IACtC,IAAIC,YAAY,GAAG,EAAE;IAErB,IAAIL,KAAK,CAACM,YAAY,IAAI,CAAC,EAAED,YAAY,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,IAAIP,KAAK,CAACQ,WAAW,IAAI,EAAE,EAAEH,YAAY,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,MAAME,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IACzC,IAAI,IAAIC,IAAI,CAAC,CAAC,GAAG,IAAIA,IAAI,CAACV,KAAK,CAACW,SAAS,CAAC,IAAIF,OAAO,EAAEJ,YAAY,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,IAAIP,KAAK,CAACY,SAAS,IAAI,KAAK,EAAEP,YAAY,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,KAAAH,eAAA,GAAIJ,KAAK,CAACa,QAAQ,cAAAT,eAAA,eAAdA,eAAA,CAAgBU,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACH,SAAS,IAAI,KAAK,CAAC,EAC7DP,YAAY,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;IAExB,OAAOF,YAAY;EACrB,CAAC;EAED,MAAMW,cAAc,GAAG9C,MAAM,CAC1B+C,GAAG,CAAEjB,KAAK,KAAM;IACf,GAAGA,KAAK;IACRkB,QAAQ,EAAEf,oBAAoB,CAACH,KAAK;EACtC,CAAC,CAAC,CAAC,CACF5B,MAAM,CAAE4B,KAAK,IAAM5B,MAAM,KAAK,QAAQ,GAAG4B,KAAK,CAACmB,QAAQ,GAAG,CAACnB,KAAK,CAACmB,QAAS,CAAC,CAC3E/C,MAAM,CAAE4B,KAAK;IAAA,IAAAoB,WAAA;IAAA,QAAAA,WAAA,GACZpB,KAAK,CAACqB,IAAI,cAAAD,WAAA,uBAAVA,WAAA,CAAYE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACjD,UAAU,CAACgD,WAAW,CAAC,CAAC,CAAC;EAAA,CAC9D,CAAC,CACAE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACd,IAAIlD,SAAS,KAAK,QAAQ,EACxB,OAAO,IAAIkC,IAAI,CAACgB,CAAC,CAACf,SAAS,CAAC,GAAG,IAAID,IAAI,CAACe,CAAC,CAACd,SAAS,CAAC;IACtD,IAAInC,SAAS,KAAK,WAAW,EAAE,OAAOkD,CAAC,CAACd,SAAS,GAAGa,CAAC,CAACb,SAAS;IAC/D,IAAIpC,SAAS,KAAK,WAAW,EAAE,OAAOkD,CAAC,CAACC,SAAS,GAAGF,CAAC,CAACE,SAAS;IAC/D,IAAInD,SAAS,KAAK,YAAY,EAC5B,OAAOkD,CAAC,CAACR,QAAQ,CAACU,MAAM,GAAGH,CAAC,CAACP,QAAQ,CAACU,MAAM;IAC9C,OAAO,CAAC;EACV,CAAC,CAAC;EAEJ,IAAIlD,OAAO,EAAE;IACX,oBAAOX,OAAA;MAAA8D,QAAA,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EACzB;EAEA,IAAIrD,KAAK,EAAE;IACT,oBAAOb,OAAA;MAAA8D,QAAA,EAAIjD;IAAK;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,CAAC,CAAC;EACzB;EAEA,oBACElE,OAAA;IAAKmE,SAAS,EAAC,iBAAiB;IAAAL,QAAA,gBAC9B9D,OAAA;MAAKmE,SAAS,EAAC,kBAAkB;MAAAL,QAAA,gBAC/B9D,OAAA;QAAKmE,SAAS,EAAC;MAAgB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtClE,OAAA;QAAKmE,SAAS,EAAC,yBAAyB;QAAAL,QAAA,eACtC9D,OAAA;UAAQoE,OAAO,EAAEA,CAAA,KAAMrD,QAAQ,CAAC,SAAS,CAAE;UAACoD,SAAS,EAAC,eAAe;UAAAL,QAAA,EAAC;QAEtE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENlE,OAAA;MAAKmE,SAAS,EAAC,iBAAiB;MAAAL,QAAA,gBAC9B9D,OAAA;QAAKmE,SAAS,EAAC,gBAAgB;QAAAL,QAAA,gBAC7B9D,OAAA;UACEmE,SAAS,EAAE9D,MAAM,KAAK,QAAQ,GAAG,eAAe,GAAG,EAAG;UACtD+D,OAAO,EAAEA,CAAA,KAAM3C,iBAAiB,CAAC,QAAQ,CAAE;UAAAqC,QAAA,EAC5C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlE,OAAA;UACEmE,SAAS,EAAE9D,MAAM,KAAK,SAAS,GAAG,eAAe,GAAG,EAAG;UACvD+D,OAAO,EAAEA,CAAA,KAAM3C,iBAAiB,CAAC,SAAS,CAAE;UAAAqC,QAAA,EAC7C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNlE,OAAA;QACEqE,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gEAAc;QAC1BxC,KAAK,EAAEvB,UAAW;QAClBgE,QAAQ,EAAE5C,kBAAmB;QAC7BwC,SAAS,EAAC;MAAc;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFlE,OAAA;QACE8B,KAAK,EAAErB,SAAU;QACjB8D,QAAQ,EAAExC,gBAAiB;QAC3BoC,SAAS,EAAC,aAAa;QAAAL,QAAA,gBAEvB9D,OAAA;UAAQ8B,KAAK,EAAC,QAAQ;UAAAgC,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnClE,OAAA;UAAQ8B,KAAK,EAAC,WAAW;UAAAgC,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtClE,OAAA;UAAQ8B,KAAK,EAAC,WAAW;UAAAgC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1ClE,OAAA;UAAQ8B,KAAK,EAAC,YAAY;UAAAgC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENlE,OAAA;MAAKmE,SAAS,EAAC,YAAY;MAAAL,QAAA,EACxBb,cAAc,CAACY,MAAM,GAAG,CAAC,GACxBZ,cAAc,CAACC,GAAG,CAAC,CAACjB,KAAK,EAAEuC,KAAK,kBAC9BxE,OAAA;QAEEmE,SAAS,EAAC,YAAY;QACtBC,OAAO,EAAEA,CAAA,KAAMpC,gBAAgB,CAACC,KAAK,CAAE;QAAA6B,QAAA,GAEtC7B,KAAK,CAACwC,QAAQ,iBACbzE,OAAA;UACE0E,GAAG,EAAEzC,KAAK,CAACwC,QAAQ,IAAI,wBAAyB;UAChDE,GAAG,EAAE1C,KAAK,CAACqB,IAAI,IAAI;QAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CACF,eACDlE,OAAA;UAAKmE,SAAS,EAAC,eAAe;UAAAL,QAAA,eAC5B9D,OAAA;YAAA8D,QAAA,EAAO7B,KAAK,CAACmB,QAAQ,GAAG,IAAI,GAAG;UAAK;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACNlE,OAAA;UAAA8D,QAAA,EAAK7B,KAAK,CAACqB;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACpBjC,KAAK,CAAC2C,YAAY,iBAAI5E,OAAA;UAAA8D,QAAA,EAAI7B,KAAK,CAAC2C;QAAY;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClDlE,OAAA;UAAKmE,SAAS,EAAC,aAAa;UAAAL,QAAA,gBAC1B9D,OAAA;YAAA8D,QAAA,eACE9D,OAAA;cAAA8D,QAAA,GAAM,6BAAO,EAAC,CAAC7B,KAAK,CAACkB,QAAQ,IAAI,EAAE,EAAEU,MAAM;YAAA;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eACNlE,OAAA;YAAA8D,QAAA,eACE9D,OAAA;cAAA8D,QAAA,GAAM,6BAAO,EAAC7B,KAAK,CAAC2B,SAAS;YAAA;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eACNlE,OAAA;YAAA8D,QAAA,eACE9D,OAAA;cAAA8D,QAAA,GAAM,sBAAK,EAAC7B,KAAK,CAACY,SAAS;YAAA;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAzBDM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA0BP,CACN,CAAC,gBAEFlE,OAAA;QAAA8D,QAAA,EAAG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAChB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChE,EAAA,CA7KID,KAAK;EAAA,QAOQH,WAAW;AAAA;AAAA+E,EAAA,GAPxB5E,KAAK;AA+KX,eAAeA,KAAK;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}